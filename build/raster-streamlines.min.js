// raster-streamlines Version 0.1.0. Copyright 2020 Roger Veciana i Rovira.
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.rastertools=t.rastertools||{})}(this,function(t){"use strict";function e(t,e){if(t.length<=1||e.length<=1||t[0].length<=1||e[0].length<=1)throw new Error("Raster is too small");this.uData=t,this.vData=e,this.xSize=this.uData[0].length,this.ySize=this.uData.length,this.usedPixels=[];for(var i=0;i<t.length;i++){for(var s=[],r=0;r<t[0].length;r++)s.push(!1);this.usedPixels.push(s)}}function i(t,e,i){return t<=e?e:t>=i?i:t}var s=function(t,i,s,r,h){r=r||1;var n={type:"FeatureCollection",features:[]},o=0,a=new e(t,i);if(s){if(6!==s.length)throw new Error("Bad geotransform")}else s=[0,1,0,0,0,1];for(var u,l,f=!0,x=!0,p=0;f;){p%4==0?(u=0,l=0):p%4==1?(u=t[0].length-1,l=t.length-1):p%4==2?(u=t[0].length-1,l=0):(u=0,l=t.length-1);var g=Math.round(t.length/(60*r));g=g>0?g:1,f=a.findEmptyPixel(u,l,g),x=a.getLine(f.x,f.y,h),x&&(n.features.push({type:"Feature",geometry:{type:"LineString",coordinates:a.applyGeoTransform(x,s)},properties:{num_line:o}}),o++),p++}return n};e.prototype.findEmptyPixel=function(t,e,i){if(this.isPixelFree(t,e,i))return{x:t,y:e};for(var s=this.uData[0].length+this.uData.length,r=2;r<=s+1;r+=2)for(var h=0;h<r;h++){if(this.isPixelFree(h+1+t-r/2,e-r/2,i))return{x:h+1+t-r/2,y:e-r/2};if(this.isPixelFree(t-r/2,h+e-r/2,i))return{x:t-r/2,y:h+e-r/2};if(this.isPixelFree(r+t-r/2,h+1+e-r/2,i))return{x:r+t-r/2,y:h+1+e-r/2};if(this.isPixelFree(h+t-r/2,r+e-r/2,i))return{x:h+t-r/2,y:r+e-r/2}}return!1},e.prototype.isPixelFree=function(t,e,i){if(t<0||t>=this.usedPixels[0].length||e<0||e>=this.usedPixels.length)return!1;for(var s=-i;s<=i;s++)for(var r=-i;r<=i;r++)if(e+r>=0&&e+r<this.usedPixels.length&&t+s>=0&&t+s<this.usedPixels[e].length&&this.usedPixels[e+r][t+s])return!1;return!0},e.prototype.getLine=function(t,e,i){var s,r=!1,h=t,n=e,o=[[h,n]];for(i=i?1:-1;h>=0&&h<this.xSize&&n>=0&&n<this.ySize;){if(s=this.getValueAtPoint(h,n),h+=s.u,n+=i*s.v,0===s.u&&0===s.v){this.usedPixels[e][t]=!0;break}if(h<0||n<0||h>=this.xSize||n>=this.ySize||this.usedPixels[Math.floor(n)][Math.floor(h)])break;o.push([h,n]),r=!0,this.usedPixels[Math.floor(n)][Math.floor(h)]=!0}for(h=t,n=e;h>=0&&h<this.uData[0].length&&n>=0&&n<this.uData.length;){if(s=this.getValueAtPoint(h,n),h-=s.u,n-=i*s.v,0===s.u&&0===s.v){this.usedPixels[e][t]=!0;break}if(h<0||n<0||h>=this.xSize||n>=this.ySize||this.usedPixels[Math.floor(n)][Math.floor(h)])break;o.unshift([h,n]),r=!0,this.usedPixels[Math.floor(n)][Math.floor(h)]=!0}return!!r&&(this.usedPixels[e][t]=!0,o)},e.prototype.applyGeoTransform=function(t,e){for(var i=[],s=0;s<t.length;s++)i.push([e[0]+e[1]*t[s][0]+e[2]*t[s][1],e[3]+e[4]*t[s][0]+e[5]*t[s][1]]);return i},e.prototype.getValueAtPoint=function(t,e){const s=i(Math.floor(t),0,this.xSize-2),r=s+1,h=i(Math.floor(e),0,this.ySize-2),n=h+1,o=t-s,a=1-o,u=e-h,l=1-u,f=l*a,x=u*a,p=l*o,g=u*o,d=this.uData[h][s]*f+this.uData[h][r]*x+this.uData[n][s]*p+this.uData[n][r]*g,y=this.vData[h][s]*f+this.vData[h][r]*x+this.vData[n][s]*p+this.vData[n][r]*g,P=Math.sqrt(d*d+y*y)||1;return{u:d/P,v:y/P}},t.streamlines=s,Object.defineProperty(t,"__esModule",{value:!0})});