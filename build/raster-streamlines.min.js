// raster-streamlines Version 0.1.0. Copyright 2020 Roger Veciana i Rovira.
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.rastertools=e.rastertools||{})}(this,function(e){"use strict";function t(e,t){if(e.length<=1||t.length<=1||e[0].length<=1||t[0].length<=1)throw new Error("Raster is too small");if(e.length!==t.length||e[0].length!==t[0].length)throw new Error("Raster components are not the same shape");this.uData=e,this.vData=t,this.xSize=this.uData[0].length,this.ySize=this.uData.length,this.usedPixels=[];for(var i=0;i<this.ySize;i++){for(var s=[],r=0;r<this.xSize;r++)s.push(!1);this.usedPixels.push(s)}}function i(e,t,i){return e<=t?t:e>=i?i:e}var s=function(e,i,s,r,o){r=r||1;var h={type:"FeatureCollection",features:[]},n=0,a=new t(e,i);if(s){if(6!==s.length)throw new Error("Bad geotransform")}else s=[0,1,0,0,0,1];for(var u,l,f=!0,x=!0,p=0;f;){p%4==0?(u=0,l=0):p%4==1?(u=a.xSize-1,l=a.ySize-1):p%4==2?(u=a.xSize-1,l=0):(u=0,l=a.ySize-1);var y=Math.round(a.ySize/(60*r));y=y>0?y:1,f=a.findEmptyPixel(u,l,y),x=a.getLine(f.x,f.y,o),x&&(h.features.push({type:"Feature",geometry:{type:"LineString",coordinates:a.applyGeoTransform(x,s)},properties:{num_line:n}}),n++),p++}return h};t.prototype.findEmptyPixel=function(e,t,i){if(this.isPixelFree(e,t,i))return{x:e,y:t};for(var s=this.xSize+this.ySize,r=2;r<=s+1;r+=2)for(var o=0;o<r;o++){if(this.isPixelFree(o+1+e-r/2,t-r/2,i))return{x:o+1+e-r/2,y:t-r/2};if(this.isPixelFree(e-r/2,o+t-r/2,i))return{x:e-r/2,y:o+t-r/2};if(this.isPixelFree(r+e-r/2,o+1+t-r/2,i))return{x:r+e-r/2,y:o+1+t-r/2};if(this.isPixelFree(o+e-r/2,r+t-r/2,i))return{x:o+e-r/2,y:r+t-r/2}}return!1},t.prototype.isPixelFree=function(e,t,i){if(e<0||e>=this.usedPixels[0].length||t<0||t>=this.usedPixels.length)return!1;for(var s=-i;s<=i;s++)for(var r=-i;r<=i;r++)if(t+r>=0&&t+r<this.usedPixels.length&&e+s>=0&&e+s<this.usedPixels[t].length&&this.usedPixels[t+r][e+s])return!1;return!0},t.prototype.getLine=function(e,t,i){var s,r=!1,o=e,h=t,n=[[o,h]];for(i=i?1:-1;o>=0&&o<this.xSize&&h>=0&&h<this.ySize;){if(s=this.getValueAtPoint(o,h),o+=s.u,h+=i*s.v,0===s.u&&0===s.v){this.usedPixels[t][e]=!0;break}if(o<0||h<0||o>=this.xSize||h>=this.ySize||this.usedPixels[Math.floor(h)][Math.floor(o)])break;n.push([o,h]),r=!0,this.usedPixels[Math.floor(h)][Math.floor(o)]=!0}for(o=e,h=t;o>=0&&o<this.xSize&&h>=0&&h<this.ySize;){if(s=this.getValueAtPoint(o,h),o-=s.u,h-=i*s.v,0===s.u&&0===s.v){this.usedPixels[t][e]=!0;break}if(o<0||h<0||o>=this.xSize||h>=this.ySize||this.usedPixels[Math.floor(h)][Math.floor(o)])break;n.unshift([o,h]),r=!0,this.usedPixels[Math.floor(h)][Math.floor(o)]=!0}return!!r&&(this.usedPixels[t][e]=!0,n)},t.prototype.applyGeoTransform=function(e,t){for(var i=[],s=0;s<e.length;s++)i.push([t[0]+t[1]*e[s][0]+t[2]*e[s][1],t[3]+t[4]*e[s][0]+t[5]*e[s][1]]);return i},t.prototype.getValueAtPoint=function(e,t){const s=i(Math.floor(e),0,this.xSize-2),r=s+1,o=i(Math.floor(t),0,this.ySize-2),h=o+1,n=e-s,a=1-n,u=t-o,l=1-u,f=l*a,x=u*a,p=l*n,y=u*n,d=this.uData[o][s]*f+this.uData[o][r]*x+this.uData[h][s]*p+this.uData[h][r]*y,P=this.vData[o][s]*f+this.vData[o][r]*x+this.vData[h][s]*p+this.vData[h][r]*y,g=Math.sqrt(d*d+P*P)||1;return{u:d/g,v:P/g}},e.streamlines=s,Object.defineProperty(e,"__esModule",{value:!0})});