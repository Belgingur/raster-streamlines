// raster-streamlines Version 0.0.0. Copyright 2016 Roger Veciana i Rovira.
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.rs=t.rs||{})}(this,function(t){"use strict";function e(t,e){if(t.length<=1||e.length<=1||t[0].length<=1||e[0].length<=1)throw new Error("Raster is too small");this.uData=t,this.vData=e,this.usedPixels=[];for(var a=0;a<t.length;a++){for(var h=[],i=0;i<t[0].length;i++)h.push(!1);this.usedPixels.push(h)}}var a=function(t,a,h){var i={type:"FeatureCollection",features:[]},r=0,o=new e(t,a);if(h){if(6!==h.length)throw new Error("Bad geotransform")}else h=[0,1,0,0,0,1];for(var l,s,u=!0,f=!0,n=0;u;)n%4===0?(l=0,s=0):n%4===1?(l=t[0].length-1,s=t.length-1):n%4===2?(l=t[0].length-1,s=0):(l=0,s=t.length-1),u=o.findEmptyPixel(l,s,1),f=o.getLine(u.x,u.y),f&&(i.features.push({type:"Feature",geometry:{type:"LineString",coordinates:o.applyGeoTransform(f,h)},properties:{num_line:r}}),r++),n++;return i};e.prototype.findEmptyPixel=function(t,e,a){if(this.isPixelFree(t,e,a))return{x:t,y:e};for(var h=this.uData[0].length+this.uData.length,i=2;i<=h+1;i+=2)for(var r=0;r<i;r++){if(this.isPixelFree(r+1+t-i/2,e-i/2,a))return{x:r+1+t-i/2,y:e-i/2};if(this.isPixelFree(t-i/2,r+e-i/2,a))return{x:t-i/2,y:r+e-i/2};if(this.isPixelFree(i+t-i/2,r+1+e-i/2,a))return{x:i+t-i/2,y:r+1+e-i/2};if(this.isPixelFree(r+t-i/2,i+e-i/2,a))return{x:r+t-i/2,y:i+e-i/2}}return!1},e.prototype.isPixelFree=function(t,e,a){if(t<0||t>=this.usedPixels[0].length||e<0||e>=this.usedPixels.length)return!1;for(var h=-a;h<=a;h++)for(var i=-a;i<=a;i++)if(e+i>=0&&e+i<this.usedPixels.length&&t+h>=0&&t+h<this.usedPixels[e].length&&this.usedPixels[e+i][t+h])return!1;return!0},e.prototype.getLine=function(t,e){for(var a,h=!1,i=t,r=e,o=[[i,r]];i>=0&&i<this.uData[0].length&&r>=0&&r<this.uData.length;){if(a=this.getValueAtPoint(i,r),i+=a.u,r-=a.v,0===a.u&&0===a.v){this.usedPixels[e][t]=!0;break}if(i<0||r<0||i>=this.uData[0].length||r>=this.uData.length||this.usedPixels[Math.floor(r)][Math.floor(i)])break;o.push([i,r]),h=!0,this.usedPixels[Math.floor(r)][Math.floor(i)]=!0}for(i=t,r=e;i>=0&&i<this.uData[0].length&&r>=0&&r<this.uData.length;){if(a=this.getValueAtPoint(i,r),i-=a.u,r+=a.v,0===a.u&&0===a.v){this.usedPixels[e][t]=!0;break}if(i<0||r<0||i>=this.uData[0].length||r>=this.uData.length||this.usedPixels[Math.floor(r)][Math.floor(i)])break;o.unshift([i,r]),h=!0,this.usedPixels[Math.floor(r)][Math.floor(i)]=!0}return!!h&&(this.usedPixels[e][t]=!0,o)},e.prototype.applyGeoTransform=function(t,e){for(var a=[],h=0;h<t.length;h++)a.push([e[0]+e[1]*t[h][0]+e[2]*t[h][1],e[3]+e[4]*t[h][0]+e[5]*t[h][1]]);return a},e.prototype.getValueAtPoint=function(t,e){var a,h,i,r,o=Math.sqrt((Math.floor(t)-t)*(Math.floor(t)-t)+(Math.floor(e)-e)*(Math.floor(e)-e)),l=Math.sqrt((Math.floor(t)-t)*(Math.floor(t)-t)+(Math.ceil(e)-e)*(Math.ceil(e)-e)),s=Math.sqrt((Math.ceil(t)-t)*(Math.ceil(t)-t)+(Math.ceil(e)-e)*(Math.ceil(e)-e)),u=Math.sqrt((Math.ceil(t)-t)*(Math.ceil(t)-t)+(Math.floor(e)-e)*(Math.floor(e)-e));return o<.01?(a=this.uData[Math.floor(e)][Math.floor(t)],h=this.vData[Math.floor(e)][Math.floor(t)]):l<.01?(a=this.uData[Math.ceil(e)][Math.floor(t)],h=this.vData[Math.ceil(e)][Math.floor(t)]):s<.01?(a=this.uData[Math.ceil(e)][Math.ceil(t)],h=this.vData[Math.ceil(e)][Math.ceil(t)]):u<.01?(a=this.uData[Math.floor(e)][Math.ceil(t)],h=this.vData[Math.floor(e)][Math.ceil(t)]):(r=0,a=0,h=0,this.uData[Math.floor(e)]&&this.uData[Math.floor(e)][Math.floor(t)]&&(a+=this.uData[Math.floor(e)][Math.floor(t)]/o,h+=this.vData[Math.floor(e)][Math.floor(t)]/o,r+=1/o),this.uData[Math.ceil(e)]&&this.uData[Math.ceil(e)][Math.floor(t)]&&(a+=this.uData[Math.ceil(e)][Math.floor(t)]/l,h+=this.vData[Math.ceil(e)][Math.floor(t)]/l,r+=1/l),this.uData[Math.ceil(e)]&&this.uData[Math.ceil(e)][Math.ceil(t)]&&(a+=this.uData[Math.ceil(e)][Math.ceil(t)]/s,h+=this.vData[Math.ceil(e)][Math.ceil(t)]/s,r+=1/s),this.uData[Math.floor(e)]&&this.uData[Math.floor(e)][Math.ceil(t)]&&(a+=this.uData[Math.floor(e)][Math.ceil(t)]/u,h+=this.vData[Math.floor(e)][Math.ceil(t)]/u,r+=1/u),a/=r,h/=r),i=Math.sqrt(a*a+h*h),0!==i&&0!==r?{u:a/i,v:h/i}:{u:0,v:0}},t.streamlines=a,Object.defineProperty(t,"__esModule",{value:!0})});