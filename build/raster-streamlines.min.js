// raster-streamlines Version 0.1.0. Copyright 2020 Roger Veciana i Rovira.
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.rastertools=t.rastertools||{})}(this,function(t){"use strict";function e(t,e){if(t.length<=1||e.length<=1||t[0].length<=1||e[0].length<=1)throw new Error("Raster is too small");if(t.length!==e.length||t[0].length!==e[0].length)throw new Error("Raster components are not the same shape");this.uData=t,this.vData=e,this.xSize=this.uData[0].length,this.ySize=this.uData.length,this.usedPixels=new Array(this.ySize);for(var i=0;i<this.ySize;i++)this.usedPixels[i]=new Array(this.xSize).fill(!1)}function i(t,e,i){return t<=e?e:t>=i?i:t}var s=function(t,i,s,r,n){r=r||1;var o={type:"FeatureCollection",features:[]},a=0,h=new e(t,i);if(s&&6!==s.length)throw new Error("Bad geotransform");const u=Math.round(h.ySize/(60*r))||1;for(var l=h.xSize*h.ySize,f=0;f<l;f++){var y=327685*f%l,p=Math.trunc(y/h.ySize),x=y%h.ySize;if(h.isPixelFree(p,x,u)){var S=h.getLine(p,x,n);S&&(o.features.push({type:"Feature",geometry:{type:"LineString",coordinates:h.applyGeoTransform(S,s)},properties:{num_line:a}}),a++)}}return o};e.prototype.isPixelFree=function(t,e,i){if(t<0||t>=this.xSize||e<0||e>=this.ySize)return!1;const s=Math.max(t-i,0),r=Math.min(t+i,this.xSize-1),n=Math.max(e-i,0),o=Math.min(e+i,this.ySize-1);for(var a=s;a<=r;a++)for(var h=n;h<=o;h++)if(this.usedPixels[h][a])return!1;return!0},e.prototype.getLine=function(t,e,i){var s,r,n,o=!1,a=t,h=e,u=[[a,h]];for(i=i?1:-1;a>=0&&a<this.xSize&&h>=0&&h<this.ySize;){if(n=this.getValueAtPoint(a,h),0===n.u&&0===n.v){this.usedPixels[e][t]=!0;break}if(a+=n.u,h+=i*n.v,r=Math.floor(h),s=Math.floor(a),a<0||h<0||a>=this.xSize||h>=this.ySize||this.usedPixels[r][s])break;u.push([a,h]),o=!0,this.usedPixels[r][s]=!0}for(a=t,h=e;a>=0&&a<this.xSize&&h>=0&&h<this.ySize;){if(n=this.getValueAtPoint(a,h),0===n.u&&0===n.v){this.usedPixels[e][t]=!0;break}if(a-=n.u,h-=i*n.v,r=Math.floor(h),s=Math.floor(a),a<0||h<0||a>=this.xSize||h>=this.ySize||this.usedPixels[r][s])break;u.unshift([a,h]),o=!0,this.usedPixels[r][s]=!0}return!!o&&(this.usedPixels[e][t]=!0,u)},e.prototype.applyGeoTransform=function(t,e){function i(t){return[e[0]+e[1]*t[0]+e[2]*t[1],e[3]+e[4]*t[0]+e[5]*t[1]]}return null==e?t:t.map(i)},e.prototype.getValueAtPoint=function(t,e){const s=i(Math.floor(t),0,this.xSize-2),r=s+1,n=i(Math.floor(e),0,this.ySize-2),o=n+1,a=t-s,h=1-a,u=e-n,l=1-u,f=l*h,y=u*h,p=l*a,x=u*a,S=this.uData[n][s]*f+this.uData[n][r]*y+this.uData[o][s]*p+this.uData[o][r]*x,z=this.vData[n][s]*f+this.vData[n][r]*y+this.vData[o][s]*p+this.vData[o][r]*x,d=Math.sqrt(S*S+z*z)||1;return{u:S/d,v:z/d}},t.streamlines=s,Object.defineProperty(t,"__esModule",{value:!0})});